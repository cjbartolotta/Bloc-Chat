{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisBartolotta/bloc2/Bloc-Chat/src/components/RoomList.js\";\nimport React, { Component } from 'react';\n\nclass RoomList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rooms: []\n    };\n    this.roomsRef = this.props.firebase.database().ref('rooms');\n  }\n\n  componentDidMount() {\n    this.roomsRef.on('child_added', snapshot => {\n      const room = snapshot.val();\n      room.key = snapshot.key;\n      this.setState({\n        rooms: this.state.rooms.concat(room)\n      });\n    });\n  }\n\n  render() {\n    return this.state.rooms.map((room, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, room.name));\n  }\n\n}","map":{"version":3,"sources":["/Users/ChrisBartolotta/bloc2/Bloc-Chat/src/components/RoomList.js"],"names":["React","Component","RoomList","constructor","props","state","rooms","roomsRef","firebase","database","ref","componentDidMount","on","snapshot","room","val","key","setState","concat","render","map","index","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,GAA+BC,GAA/B,CAAmC,OAAnC,CAAhB;AACD;;AAECC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,QAAL,CAAcK,EAAd,CAAiB,aAAjB,EAAgCC,QAAQ,IAAI;AAC1C,YAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAD,MAAAA,IAAI,CAACE,GAAL,GAAWH,QAAQ,CAACG,GAApB;AACA,WAAKC,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBY,MAAjB,CAAyBJ,IAAzB;AAAT,OAAd;AACD,KAJD;AAKD;;AAEDK,EAAAA,MAAM,GAAG;AACP,WACE,KAAKd,KAAL,CAAWC,KAAX,CAAiBc,GAAjB,CAAsB,CAACN,IAAD,EAAOO,KAAP,KACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEP,IAAI,CAACQ,IADP,CADF,CADF;AAMD;;AA1B4B","sourcesContent":["import React, { Component } from 'react';\n\nclass RoomList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rooms: []\n    };\n\n    this.roomsRef = this.props.firebase.database().ref('rooms');\n  }\n\n    componentDidMount() {\n      this.roomsRef.on('child_added', snapshot => {\n        const room = snapshot.val();\n        room.key = snapshot.key;\n        this.setState({ rooms: this.state.rooms.concat( room ) });\n      })\n    }\n\n    render() {\n      return (\n        this.state.rooms.map( (room, index) =>\n          <div>\n           {room.name}\n          </div> )\n      )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}